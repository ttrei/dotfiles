# Configuration of the following nginx service deployed to a NixOS machine (copied from nix store):
# https://dataswamp.org/~solene/2022-06-02-nixos-local-cache.html

pid /run/nginx/nginx.pid;
error_log stderr;
daemon off;
events {
}
http {
	# Load mime types.
	include /nix/store/vdzdipmq92zcxs47qdvm2fkahglmvgjq-mailcap-2.1.53/etc/nginx/mime.types;
	# When recommendedOptimisation is disabled nginx fails to start because the mailmap mime.types database
	# contains 1026 entries and the default is only 1024. Setting to a higher number to remove the need to
	# overwrite it because nginx does not allow duplicated settings.
	types_hash_max_size 4096;
	include /nix/store/4595gizbhh4grdynsb4pv8d0zhi09dqw-nginx-1.24.0/conf/fastcgi.conf;
	include /nix/store/4595gizbhh4grdynsb4pv8d0zhi09dqw-nginx-1.24.0/conf/uwsgi_params;
	default_type application/octet-stream;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	# $connection_upgrade is used for websocket proxying
	map $http_upgrade $connection_upgrade {
		default upgrade;
		''      close;
	}
	client_max_body_size 10m;
	server_tokens off;
	server {
		listen 0.0.0.0:80 ;
		listen [::0]:80 ;
		server_name 10.42.42.150 ;
		location / {
			root /var/public-nix-cache;
			expires max;
			add_header Cache-Control $cache_header always;
			# Ask the upstream server if a file isn't available locally
			error_page 404 = @fallback;
		}
		location = /nix-cache-info {
			proxy_pass $upstream_endpoint;
			proxy_cache cachecache;
			proxy_cache_valid  200 302  60d;
			expires max;
			add_header Cache-Control $cache_header always;
		}
		location @fallback {
			proxy_pass $upstream_endpoint;
			proxy_cache cachecache;
			proxy_cache_valid  200 302  60d;
			expires max;
			add_header Cache-Control $cache_header always;
		}
		# Using a variable for the upstream endpoint to ensure that it is
		# resolved at runtime as opposed to once when the config file is loaded
		# and then cached forever (we don't want that):
		# see https://tenzer.dk/nginx-with-dynamic-upstreams/
		# This fixes errors like
		#   nginx: [emerg] host not found in upstream "upstream.example.com"
		# when the upstream host is not reachable for a short time when
		# nginx is started.
		resolver 8.8.8.8;
		set $upstream_endpoint http://cache.nixos.org;
	}
	proxy_cache_path /tmp/pkgcache levels=1:2 keys_zone=cachecache:100m max_size=20g inactive=365d use_temp_path=off;
	# Cache only success status codes; in particular we don't want to cache 404s.
	# See https://serverfault.com/a/690258/128321
	map $status $cache_header {
		200     "public";
		302     "public";
		default "no-cache";
	}
	access_log /var/log/nginx/access.log;
}
