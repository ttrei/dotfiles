#!/usr/bin/env python3

import os
import sys
import json
import socket

DARKGRAY = "#444444"
GREEN    = "#00FF00"
RED      = "#FF0000"
YELLOW   = "#FFFF00"

def error(message):
    return [{
        u'markup': u'none',
        u'full_text': message,
        u'color': RED,
    }]

def get_upgrade_count(hostname):
    try:
        f = open('/var/tmp/upgrade_counts.json', 'r')
        strdata = f.read()
        f.close()
    except IOError:
        return error('Could not read /var/tmp/upgrade_counts.json')

    try:
        data = json.loads(strdata)
    except ValueError:
        return error('/var/tmp/upgrade_counts.json contains invalid JSON')

    data = {x['host']:x for x in data}
    if hostname not in data:
        return ''

    data = data[hostname]

    count = int(data.get('count', -1))
    if count == 0:
        color = GREEN
    elif count > 0:
        color = YELLOW
    else:
        color = DARKGRAY

    return {
        u'full_text': "%s: %d" % (data['host'], count),
        u'short_text': "%s: %d" % (data['host'][:1], count),
        u'color': color,
    }

class Args(object):
    def add_argument(self, name, default='', arg_type=str):
        val = default
        if name in os.environ:
            val = os.environ[name]
            if arg_type == list:
                val = val.split()
        val = arg_type(val)
        setattr(self, name.lower(), val)
        return val

args = Args()
args.add_argument('HOSTNAME', socket.gethostname())

output = get_upgrade_count(args.hostname)
print(json.dumps(output))
