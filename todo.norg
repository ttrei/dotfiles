* Move neovim configuration to nixvim

  https://github.com/nix-community/nixvim

  Check out this config for useful things:
  https://github.com/LGUG2Z/JeezyVim

* Try out Determinate Nix

   https://docs.determinate.systems/guides/advanced-installation/#nixos

* Annoyances

** (neorg) Indentation jumps around

   ~ Create new heading
   ~ press enter, indentation is at correct level
   ~ press enter again -> no more indentation (may have to press enter multiple times to get the effect)

   After entering text and pressing escape, the text gets indented correctly.

   Maybe configure format_on_enter=false?
   https://github.com/nvim-neorg/neorg/wiki/Indent#format_on_enter
   I think the behavior will be more consistent if it formats only on exiting insert mode.

** Don't deploy python __pycache__ directories

   Either "git clean -fd" them or copy only specific files instead of directories.
   Encountered while developing workspace init scripts (dotfiles/i3/workspace-scripts).

** (skip) Migrate from transmission to rtorrent

   Used this as example on how to integrate with the flood ui:
   https://wiki.nixos.org/wiki/Rtorrent

   Registered a user in the flood ui.
   Specified socket /run/rtorrent/rpc.sock.

   Connected radarr to flood.
   https://github.com/jesec/flood/wiki/List-of-unofficial-API-integrations

   Radarr sends something to flood but it doesn't start downloading.
   Maybe because vpn not enabled?
   Have to solve the dns issues when vpn enabled.
   Update: Re-generated the wireguard config here https://mullvad.net/en/account/wireguard-config.
   Now dns seems to work.

   Maybe flood is not the way to go.
   Seems too complex and unmaintained.
   Will try to go with rutorrent https://github.com/Novik/ruTorrent.

   Managed to bring it up (port 9292).
   Left to do:
   - Connect kodi with rtorrent/rutorrent.
   - Resolve any filesystem permission issues between rtorrent and rutorrent.

   Update:
   Ran into some problems connecting kodi to rtorrent.
   The downloads also didn't start consistently.

   This was my config that barely worked:
   @code
   services.rtorrent = {
     enable = true;
     user = "reinis";
     group = "users";
     port = 51412;
     package = pkgs.jesec-rtorrent;
     openFirewall = true;
     downloadDir = "/media/Storage/rtorrent";
     configText = ''log.add_output = "debug", "log"'';
   };

   services.nginx = {
     enable = true;
     virtualHosts."myrutorrent" = {
       enableACME = false;
       addSSL = false;
       listen = [
         {
           addr = "0.0.0.0";
           port = 9292;
         }
       ];
     };
   };

   services.rutorrent = {
     enable = true;
     hostName = "myrutorrent";
     nginx.enable = true;
   };

   networking.firewall.allowedTCPPorts = [
     9292 # rutorrent UI
   ];
   networking.firewall.allowedUDPPorts = [
     6881 # rutorrent DHT
   ];
   @end

   Went back to transmission, seems to be working fine.
   Now i don't remember why i wanted to ditch transmission.

* Developer tooling

  Advice from matklad https://www.twitch.tv/videos/2336452629:
  - Work on your tools ("sharpen your axe")
  - Publish your tools
  - When using a tool, figure out how the authors *meant* it to be used, see if it works for you
  - For writing useful little scripts for yourself, the main enemy is *activation energy*

** (pre-commit) Exclude some python files from the ruff hooks

   I'm using https://github.com/cachix/git-hooks.nix to get pre-commit hooks.
   Here's the implementation of the ruff hook:
   https://github.com/cachix/git-hooks.nix/blob/80479b6ec16fefd9c1db3ea13aeb038c60530f46/modules/hooks.nix#L3666

   There's an official pre-commit plugin for ruff:
   https://github.com/astral-sh/ruff-pre-commit
   It uses the --force-exclude flag for ruff commands.
   @code
   --force-exclude
          Enforce exclusions, even for paths passed to Ruff directly on the command-line. Use `--no-force-exclude` to disable
   @end
   Looks like this is what i want.

   TODO: Try to create a custom hook or modify the one from git-hooks.nix - add the --force-exclude option.
   If it works as expected, create a PR in git-hooks.nix repo.

** (git) Try out mergiraf

   https://mergiraf.org/introduction.html
   https://codeberg.org/mergiraf/mergiraf

** (git) Try out difftastic

   https://difftastic.wilfred.me.uk/
   https://github.com/Wilfred/difftastic

** (neovim) One shortcut to navigate many kinds of lists

   There should be a way to select which list to navigate (errors, search results, uncommitted changes, conflicts, etc.)
   And two shortcuts to actually do the navigation.
   Idea taken from matklad: https://www.twitch.tv/videos/2336452629

** (neovim) Setup for Java development

   https://ptrtojoel.dev/posts/so-you-want-to-write-java-in-neovim/
   https://news.ycombinator.com/item?id=42530991

** (done) Add some pre-commit hooks

   https://github.com/cachix/git-hooks.nix

* Other

** Printing on NixOS

   I attempted it before, unsuccessfully, see attic/0001-wip-printing-no-luck-yet.patch

