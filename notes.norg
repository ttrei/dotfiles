* Example flake.nix

  @code
  {
    description = "Example";

    inputs = {
      dotfiles.url = "github:ttrei/dotfiles";
    };

    outputs = { self, dotfiles, ... }:
    let
      system = "x86_64-linux";
      pkgs = dotfiles.nixpkgs.legacyPackages.${system};
    in
    {
      devShells.${system}.default = pkgs.mkShell {
        buildInputs = with pkgs; [
          cowsay
        ];
      };
    };
  }
  @end

* Patch an in-tree kernel module

  Slightly adapted from
  https://wiki.nixos.org/wiki/Linux_kernel#Patching_a_single_In-tree_kernel_module

  @code nix/pkgs/mt7921/default.nix
  { pkgs
  , lib
  , kernel ? pkgs.linux
  }:

  pkgs.stdenv.mkDerivation {
    pname = "mt7921-kernel-module";
    inherit (kernel) src version postPatch nativeBuildInputs;

    kernel_dev = kernel.dev;
    kernelVersion = kernel.modDirVersion;

    modulePath = "drivers/net/wireless/mediatek/mt76/mt7921";

    buildPhase = ''
      BUILT_KERNEL=$kernel_dev/lib/modules/$kernelVersion/build

      cp $BUILT_KERNEL/Module.symvers .
      cp $BUILT_KERNEL/.config        .
      cp $kernel_dev/vmlinux          .

      make "-j$NIX_BUILD_CORES" modules_prepare
      make "-j$NIX_BUILD_CORES" M=$modulePath modules
    '';

    installPhase = ''
      make \
        INSTALL_MOD_PATH="$out" \
        XZ="xz -T$NIX_BUILD_CORES" \
        M="$modulePath" \
        modules_install
    '';

    patches = [ ./my.patch ];

    meta = {
      description = "MediaTek MT7921 kernel module";
      license = lib.licenses.isc;
    };
  }
  @end

  @code nix/pkgs/default.nix
  {pkgs ? (import ../nixpkgs.nix) {}}: {
    mt7921-kernel-module = pkgs.callPackage ./mt7921 {};
  }
  @end


  @code nix/nixos/hardware-configurations/saturn.nix
  boot.extraModulePackages = [ pkgs.mt7921-kernel-module ];
  boot.initrd.kernelModules = [ "mt7921u" ];
  @end
